import{_ as a,c as t,a0 as s,o as e}from"./chunks/framework.Dvj3iZjQ.js";const k=JSON.parse('{"title":"i-transition","description":"","frontmatter":{"0":"i","1":"-","2":"t","3":"r","4":"a","5":"n","6":"s","7":"i","8":"t","9":"i","10":"o","11":"n"},"headers":[],"relativePath":"i-transition.md","filePath":"i-transition.md"}'),n={name:"i-transition.md"};function o(h,i,l,r,d,p){return e(),t("div",null,i[0]||(i[0]=[s(`<h1 id="i-transition" tabindex="-1">i-transition <a class="header-anchor" href="#i-transition" aria-label="Permalink to &quot;i-transition&quot;">​</a></h1><h2 id="i-transition-directive" tabindex="-1">i-transition Directive <a class="header-anchor" href="#i-transition-directive" aria-label="Permalink to &quot;i-transition Directive&quot;">​</a></h2><p>The <code>i-transition</code> directive allows you to add smooth enter/leave transitions to elements in your application.</p><h3 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h3><p>Add the <code>i-transition</code> attribute to any element you want to apply transitions to:</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> i-transition</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;fade, 500, ease-in-out&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- Content to be transitioned --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h3 id="syntax" tabindex="-1">Syntax <a class="header-anchor" href="#syntax" aria-label="Permalink to &quot;Syntax&quot;">​</a></h3><p>The <code>i-transition</code> attribute accepts up to three comma-separated parameters:</p><ol><li>Transition name (optional, default: fade)</li><li>Duration in milliseconds (optional, default: 300)</li><li>Easing function (optional, default: ease)</li></ol><p>Example:</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> i-transition</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;slide, 1000, linear&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- Content --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h3 id="predefined-transitions" tabindex="-1">Predefined Transitions <a class="header-anchor" href="#predefined-transitions" aria-label="Permalink to &quot;Predefined Transitions&quot;">​</a></h3><p>The framework comes with a default &quot;fade&quot; transition that animates the opacity and vertical position of the element. You can easily extend this with custom transitions by modifying the <code>transitionHooks</code> object in the framework.</p><h3 id="combining-with-i-show" tabindex="-1">Combining with i-show <a class="header-anchor" href="#combining-with-i-show" aria-label="Permalink to &quot;Combining with i-show&quot;">​</a></h3><p>The <code>i-transition</code> directive works seamlessly with the <code>i-show</code> directive to create smooth show/hide animations:</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> i-transition</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> i-show</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;isVisible&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">This content will fade in and out smoothly.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h3 id="customizing-transitions" tabindex="-1">Customizing Transitions <a class="header-anchor" href="#customizing-transitions" aria-label="Permalink to &quot;Customizing Transitions&quot;">​</a></h3><p>To create custom transitions, you can modify the <code>transitionHooks</code> object in the framework. Each transition hook (e.g., <code>beforeEnter</code>, <code>enter</code>, <code>afterEnter</code>, etc.) can be customized to achieve the desired effect.</p><h3 id="performance-note" tabindex="-1">Performance Note <a class="header-anchor" href="#performance-note" aria-label="Permalink to &quot;Performance Note&quot;">​</a></h3><p>Transitions are implemented using CSS transitions for optimal performance. The framework automatically adds and removes the necessary inline styles to trigger the transitions.</p>`,20)]))}const E=a(n,[["render",o]]);export{k as __pageData,E as default};
